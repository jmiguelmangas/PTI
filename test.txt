============================= test session starts ==============================
platform darwin -- Python 3.11.3, pytest-7.4.2, pluggy-1.3.0
rootdir: /Users/jmiguelmangas/Preparacion Entrevistas Tecnicas/PTI
plugins: dash-2.17.0, anyio-4.1.0
collected 7 items

test_main.py .FFFFFF                                                     [100%]

=================================== FAILURES ===================================
________________________________ test_add_data _________________________________

    def test_add_data():
        data = AirQualityData(latitude=40.7128, longitude=-74.0060, pm25=12.5)
        response = client.post("/data", json=data.dict())
>       assert response.status_code == 200
E       assert 422 == 200
E        +  where 422 = <Response [422 Unprocessable Entity]>.status_code

test_main.py:24: AssertionError
_____________________________ test_get_data_by_id ______________________________

    def test_get_data_by_id():
>       new_id = test_add_data()  # Agregar un nuevo dato y obtener el ID

test_main.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def test_add_data():
        data = AirQualityData(latitude=40.7128, longitude=-74.0060, pm25=12.5)
        response = client.post("/data", json=data.dict())
>       assert response.status_code == 200
E       assert 422 == 200
E        +  where 422 = <Response [422 Unprocessable Entity]>.status_code

test_main.py:24: AssertionError
_______________________________ test_update_data _______________________________

    def test_update_data():
>       new_id = test_add_data()  # Agregar un nuevo dato y obtener el ID

test_main.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def test_add_data():
        data = AirQualityData(latitude=40.7128, longitude=-74.0060, pm25=12.5)
        response = client.post("/data", json=data.dict())
>       assert response.status_code == 200
E       assert 422 == 200
E        +  where 422 = <Response [422 Unprocessable Entity]>.status_code

test_main.py:24: AssertionError
_______________________________ test_delete_data _______________________________

    def test_delete_data():
>       new_id = test_add_data()  # Agregar un nuevo dato y obtener el ID

test_main.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def test_add_data():
        data = AirQualityData(latitude=40.7128, longitude=-74.0060, pm25=12.5)
        response = client.post("/data", json=data.dict())
>       assert response.status_code == 200
E       assert 422 == 200
E        +  where 422 = <Response [422 Unprocessable Entity]>.status_code

test_main.py:24: AssertionError
_______________________________ test_filter_data _______________________________

    def test_filter_data():
>       test_add_data()  # Asegurarse de que haya datos disponibles para filtrar

test_main.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def test_add_data():
        data = AirQualityData(latitude=40.7128, longitude=-74.0060, pm25=12.5)
        response = client.post("/data", json=data.dict())
>       assert response.status_code == 200
E       assert 422 == 200
E        +  where 422 = <Response [422 Unprocessable Entity]>.status_code

test_main.py:24: AssertionError
_____________________________ test_get_statistics ______________________________

    def test_get_statistics():
>       test_add_data()  # Asegurarse de que haya datos disponibles para estadÃ­sticas

test_main.py:54: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def test_add_data():
        data = AirQualityData(latitude=40.7128, longitude=-74.0060, pm25=12.5)
        response = client.post("/data", json=data.dict())
>       assert response.status_code == 200
E       assert 422 == 200
E        +  where 422 = <Response [422 Unprocessable Entity]>.status_code

test_main.py:24: AssertionError
=========================== short test summary info ============================
FAILED test_main.py::test_add_data - assert 422 == 200
FAILED test_main.py::test_get_data_by_id - assert 422 == 200
FAILED test_main.py::test_update_data - assert 422 == 200
FAILED test_main.py::test_delete_data - assert 422 == 200
FAILED test_main.py::test_filter_data - assert 422 == 200
FAILED test_main.py::test_get_statistics - assert 422 == 200
========================= 6 failed, 1 passed in 0.97s ==========================
